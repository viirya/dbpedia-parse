// Generated by CozyScript 0.1.1
(function() {
  var DB, app, compile, express, io, netdb, nib, server, socket_clients, stylus, util;

  express = require('express');

  stylus = require('stylus');

  nib = require('nib');

  util = require('util');

  DB = require('./netdb');

  netdb = new DB.NetDB();

  app = express();

  server = require('http').createServer(app);

  io = require('socket.io').listen(server);

  socket_clients = [];

  io.sockets.on('connection', function(socket) {
    socket_clients.push(socket);
    return socket.on('query', function(query) {
      console.log('query:', query);
      return netdb.findConnectedNodes(query, function(nodes) {
        console.log(nodes);
        return socket.emit('words', {
          'subject': nodes
        });
      });
    });
  });

  compile = function(str, path) {
    return stylus(str).set('filename', path).use(nib());
  };

  app.set('views', __dirname + '/views');

  app.set('view engine', 'jade');

  app.set('view options', {
    layout: false
  });

  app.use(express.logger());

  app.use(express.bodyParser());

  app.use(express.cookieParser());

  app.use(express.session({
    secret: "tweetheapmap"
  }));

  app.use(stylus.middleware({
    src: __dirname + '/public',
    compile: compile
  }));

  app.use(express["static"](__dirname + '/public'));

  app.use(function(error, req, res, next) {
    console.log(error);
    return res.send(500, {
      error: util.inspect(error)
    });
  });

  app.get('/', function(req, res) {
    return res.render('index');
  });

  server.listen(8088);

}).call(this);
